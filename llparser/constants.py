firsts = {"Program": ["int", "epsilon"], "Declaration_list": ["int", "epsilon"], "Declaration": ["int"], "Declaration_initial": ["int"], "Declaration_prime": ["("], "Var_declaration_prime": [";"], "Fun_declaration_prime": ["("], "Type_specifier": ["int"], "Params": ["int"], "Param_list": [",", "epsilon"], "Param": ["int"], "Param_prime": ["[", "epsilon"], "Compound_stmt": ["{"], "Statement_list": ["(", "epsilon"], "Statement": ["("], "Expression_stmt": ["("], "Selection_stmt": ["if"], "Iteration_stmt": ["while"], "Return_stmt": ["return"], "Return_stmt_prime": [";"], "Expression": ["("], "B": ["="], "H": ["="], "Simple_expression_zegond": ["("], "Simple_expression_prime": ["(", "<", "+", "*", "epsilon"], "C": ["<", "epsilon"], "Relop": ["<"], "Additive_expression": ["("], "Additive_expression_prime": ["(", "+", "*", "epsilon"], "Additive_expression_zegond": ["("], "D": ["+", "epsilon"], "Addop": ["+"], "Term": ["("], "Term_prime": ["(", "*", "epsilon"], "Term_zegond": ["("], "G": ["*", "epsilon"], "Factor": ["("], "Var_call_prime": ["("], "Var_prime": ["[", "epsilon"], "Factor_prime": ["(", "epsilon"], "Factor_zegond": ["("], "Args": ["(", "epsilon"], "Arg_list": ["("], "Arg_list_prime": [",", "epsilon"]}
follows = {"Program": ["$"], "Declaration_list": ["(", "}", "$"], "Declaration": ["(", "int", "}", "$"], "Declaration_initial": ["|", "[", "(", ","], "Declaration_prime": ["(", "int", "}", "$"], "Var_declaration_prime": ["(", "int", "}", "$"], "Fun_declaration_prime": ["|"], "Type_specifier": ["ID"], "Params": [")"], "Param_list": ["|"], "Param": ["|", ","], "Param_prime": ["|", ","], "Compound_stmt": ["|"], "Statement_list": ["}"], "Statement": ["|", "(", "}", "else"], "Expression_stmt": ["|"], "Selection_stmt": ["|"], "Iteration_stmt": ["|"], "Return_stmt": ["|", "(", "}", "else"], "Return_stmt_prime": ["|", "(", "}", "else"], "Expression": ["|", ";", "]", ")", ","], "B": ["|", ";", "]", ")", ","], "H": ["|"], "Simple_expression_zegond": ["|"], "Simple_expression_prime": ["|", ";", "]", ")", ","], "C": ["|", ";", "]", ")", ","], "Relop": ["("], "Additive_expression": ["|", ";", "]", ")", ","], "Additive_expression_prime": ["|", ";", "]", ")", ",", "<"], "Additive_expression_zegond": ["|", "<"], "D": ["|", ";", "]", ")", ",", "<"], "Addop": ["("], "Term": ["|", ";", "]", ")", ",", "<", "+"], "Term_prime": ["|", ";", "]", ")", ",", "<", "+"], "Term_zegond": ["|", "<", "+"], "G": ["|", ";", "]", ")", ",", "<", "+"], "Factor": ["|", ";", "]", ")", ",", "<", "+", "*"], "Var_call_prime": ["|"], "Var_prime": ["|"], "Factor_prime": ["|", ";", "]", ")", ",", "<", "+", "*"], "Factor_zegond": ["|", "<", "+", "*"], "Args": [")"], "Arg_list": [")"], "Arg_list_prime": [")"]}
terminals = ['ID', '|', ';', '[', 'NUM', ']', '(', ')', 'int', 'void', ',', '{', '}', 'break', 'if', 'else', 'while', 'return', '=', '<', '==', '+', '-', '*', '$']
rules = {"Program": [["Declaration_list"]], "Declaration_list": [["Declaration", "Declaration_list"], []], "Declaration": [["Declaration_initial", "Declaration_prime"]], "Declaration_initial": [["Type_specifier", "ID"]], "Declaration_prime": [["Fun_declaration_prime"], ["Var_declaration_prime"]], "Var_declaration_prime": [[";"], ["[", "NUM", "]", ";"]], "Fun_declaration_prime": [["(", "Params", ")", "Compound_stmt"]], "Type_specifier": [["int"], ["void"]], "Params": [["int", "ID", "Param_prime", "Param_list"], ["void"]], "Param_list": [[",", "Param", "Param_list"], []], "Param": [["Declaration_initial", "Param_prime"]], "Param_prime": [["[", "]"], []], "Compound_stmt": [["{", "Declaration_list", "Statement_list", "}"]], "Statement_list": [["Statement", "Statement_list"], []], "Statement": [["Expression_stmt"], ["Compound_stmt"], ["Selection_stmt"], ["Iteration_stmt"], ["Return_stmt"]], "Expression_stmt": [["Expression", ";"], ["break", ";"], [";"]], "Selection_stmt": [["if", "(", "Expression", ")", "Statement", "else", "Statement"]], "Iteration_stmt": [["while", "(", "Expression", ")", "Statement"]], "Return_stmt": [["return", "Return_stmt_prime"]], "Return_stmt_prime": [[";"], ["Expression", ";"]], "Expression": [["Simple_expression_zegond"], ["ID", "B"]], "B": [["=", "Expression"], ["[", "Expression", "]", "H"], ["Simple_expression_prime"]], "H": [["=", "Expression"], ["G", "D", "C"]], "Simple_expression_zegond": [["Additive_expression_zegond", "C"]], "Simple_expression_prime": [["Additive_expression_prime", "C"]], "C": [["Relop", "Additive_expression"], []], "Relop": [["<"], ["=="]], "Additive_expression": [["Term", "D"]], "Additive_expression_prime": [["Term_prime", "D"]], "Additive_expression_zegond": [["Term_zegond", "D"]], "D": [["Addop", "Term", "D"], []], "Addop": [["+"], ["-"]], "Term": [["Factor", "G"]], "Term_prime": [["Factor_prime", "G"]], "Term_zegond": [["Factor_zegond", "G"]], "G": [["*", "Factor", "G"], []], "Factor": [["(", "Expression", ")"], ["ID", "Var_call_prime"], ["NUM"]], "Var_call_prime": [["(", "Args", ")"], ["Var_prime"]], "Var_prime": [["[", "Expression", "]"], []], "Factor_prime": [["(", "Args", ")"], []], "Factor_zegond": [["(", "Expression", ")"], ["NUM"]], "Args": [["Arg_list"], []], "Arg_list": [["Expression", "Arg_list_prime"]], "Arg_list_prime": [[",", "Expression", "Arg_list_prime"], []]}